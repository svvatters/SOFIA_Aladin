<?xml version="1.0"?>
<project name="SOFIA_Aladin" default="main" basedir=".">	
  <description>Aladin Sky Atlas with SOFIA Extensions</description> 

	<!-- Set the final executable's filename -->
  <property name="dist.file" value="SOFIA_Aladin.jar"/>
  <property name="dist.dir" location="dist"/>
  <property name="src.dir" location="src"/>
  <property name="build.dir" location="bin"/>

  <!-- Delete the existing build and distribution directories-->
  <target name="clean">
    <delete dir="${dist.dir}"/>
    <delete dir="${build.dir}"/>
  </target>

  <!-- Create the build and distribution directories -->
  <target name="makedir">
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${build.dir}"/>
  </target> 
	
	<!-- Compile the source files -->
	<target name="compile">
  		<echo message="Source file directory:  ${src.dir}"/>
  		<echo message="Binary directory:  ${build.dir}"/>
		<javac srcdir="${src.dir}" destdir="${build.dir}" encoding="Cp1252" 
			source="1.7" target="1.7" deprecation="off" includeantruntime="false">

			<!--	 Output deprecation info during compilation -->
			<!-- <compilerarg value="-Xlint"/> -->
			
			<classpath>
  	 			<pathelement path="${java.class.path}/"/>
    			<pathelement path="${src.dir}/jsamp.jar"/>
    			<pathelement path="${src.dir}/microhub.jar"/>
    			<pathelement path="${src.dir}/Moc.jar"/>
    			<pathelement path="${src.dir}/jhealpixSmall.jar"/>
    			<pathelement path="${src.dir}/kxml2-2.3.0.jar"/>
  				<pathelement path="${src.dir}/cds.astro.jar"/>
    			<pathelement path="${src.dir}/cds.savot.common.jar"/>
    			<pathelement path="${src.dir}/cds.savot.model.jar"/>
    			<pathelement path="${src.dir}/cds.savot.pull.jar"/>
    			<pathelement path="${src.dir}/cds.savot.sax.jar"/>
    			<pathelement path="${src.dir}/cds.savot.writer.jar"/>
    			<pathelement path="${src.dir}/kxml2-2.3.0.jar"/>
	  		</classpath> 
	 	</javac>

		<!-- TODO: Figure out a better way to handle this - Copy non-java files 
		in src.dir to build.dir so Eclipse can run the project during development -->
    <copy todir="${build.dir}">
      <fileset dir="${src.dir}" excludes="**/*.java, **/*.jar, .DS_Store"/>
    </copy>

	</target>
		
  <!-- Create a runnable jar file  -->
  <target name="jar" depends="compile">
    <jar destfile="${dist.dir}/${dist.file}" basedir="${build.dir}">
  	    <zipfileset src="${src.dir}/jsamp.jar"/>
  			<zipfileset src="${src.dir}/microhub.jar"/>
  			<zipfileset src="${src.dir}/Moc.jar"/>
  			<zipfileset src="${src.dir}/jhealpixSmall.jar"/>
  			<zipfileset src="${src.dir}/kxml2-2.3.0.jar"/>
    		<zipfileset src="${src.dir}/cds.astro.jar"/>
    		<zipfileset src="${src.dir}/cds.savot.common.jar"/>
    		<zipfileset src="${src.dir}/cds.savot.model.jar"/>
    		<zipfileset src="${src.dir}/cds.savot.pull.jar"/>
    		<zipfileset src="${src.dir}/cds.savot.sax.jar"/>
    		<zipfileset src="${src.dir}/cds.savot.writer.jar"/>
    		<zipfileset src="${src.dir}/kxml2-2.3.0.jar"/>
      <fileset dir="${src.dir}" includes="*.gif,*.jpg, Ala*.*" 
          excludes="**/*.java, AladinSrc*.jar, .DS_Store"/> 
      <manifest>
        <attribute name="Main-Class" value="cds.aladin.SOFIA_Aladin"/>
      </manifest>
    </jar>
  </target>

	<!-- Compiles and creates a runnable jar file -->
  <target name="main" depends="jar">
    <description>Main target</description>
  		<echo message="Runnable jar:  ${dist.dir}/${dist.file}"/>
  </target>
	
</project>